{"version":3,"sources":["components/Header/logo.js","components/Header/navbar.js","components/Header/index.js","components/Footer/footerCopyright.js","components/Footer/index.js","assets/images/salmon-bg.jpg","components/SearchBar/index.js","components/Banner/index.js","components/DishCard/index.js","components/Carousel/index.js","assets/images/spagetti.jpg","utils/queries.js","pages/Home.js","components/MainButton/index.js","pages/Login.js","pages/Signup.js","components/UserAccount/index.js","pages/Auth/Dashboard.js","components/CreateDishForm/index.js","pages/Auth/CreateDish.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","to","Navbar","Header","FooterCopyright","Footer","SearchBar","Form","Input","fluid","size","icon","placeholder","Banner","customStyle","wallpaper","width","minHeight","backgroundImage","mealImage","backgroundPosition","backgroundRepeat","backgroundSize","display","justifyContent","alignItems","search","minWidth","Grid","columns","style","Row","Column","DishCard","dish","image","title","username","cookTime","description","Card","Content","Meta","Icon","name","Description","extra","Carousel","dishList","Segment","raised","doubling","stackable","map","id","FETCH_ALL_DISHES","gql","generateRandomId","Math","floor","random","testDishList","spagettiImg","Home","useQuery","loading","data","console","log","allDishes","basic","padded","textAlign","as","buttonStyles","algoButton","backgroundColor","color","MainButton","Button","type","Login","Divider","horizontal","Message","attached","header","content","label","warning","Signup","Checkbox","inline","UserAccount","Dashboard","circular","CreateDishForm","TextArea","rows","teal","CreateDish","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e761a2ae.chunk.js","sourcesContent":["import \"./header.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = () => {\n\treturn (\n\t\t<div className=\"logo\">\n\t\t\t<Link to=\"/\">\n\t\t\t\t<h1>\n\t\t\t\t\t<i className=\"utensils icon\"></i> algo\n\t\t\t\t\t<span className=\"dish\">Dish</span>\n\t\t\t\t</h1>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default Logo;\n","import \"./header.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n\treturn (\n\t\t<nav>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/dashboard\">Dashboard</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/signup\">Signup</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default Navbar;\n","import \"./header.css\";\nimport Logo from \"./logo\";\nimport Navbar from \"./navbar\";\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<Logo></Logo>\n\t\t\t<Navbar></Navbar>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","// import Footer from \"./index\";\n\nconst FooterCopyright = () => {\n  return <p className=\"test\">© 2021 AlgoDish. All Rights Reserved.</p>;\n};\n\nexport default FooterCopyright;\n","import \"./footer.css\";\nimport FooterCopyright from \"./footerCopyright\";\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<FooterCopyright></FooterCopyright>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/salmon-bg.87ff32fb.jpg\";","import { Form } from \"semantic-ui-react\";\n\nconst SearchBar = () => (\n\t<Form.Input fluid size=\"massive\" icon=\"search\" placeholder=\"Search...\" />\n);\nexport default SearchBar;\n","import mealImage from \"../../assets/images/salmon-bg.jpg\";\nimport SearchBar from \"../SearchBar\";\nimport { Grid } from \"semantic-ui-react\";\n\nconst Banner = () => {\n\tconst customStyle = {\n\t\twallpaper: {\n\t\t\twidth: \"100%\",\n\t\t\tminHeight: \"300px\",\n\t\t\tbackgroundImage: `url(${mealImage})`,\n\t\t\tbackgroundPosition: \"center\",\n\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\tbackgroundSize: \"cover\",\n\t\t\tdisplay: \"flex\",\n\t\t\tjustifyContent: \"center\",\n\t\t\talignItems: \"center\",\n\t\t},\n\t\tsearch: {\n\t\t\tminWidth: \"60%\",\n\t\t},\n\t};\n\treturn (\n\t\t<Grid columns={1}>\n\t\t\t<div style={customStyle.wallpaper}>\n\t\t\t\t<Grid.Row style={customStyle.search}>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t<SearchBar></SearchBar>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\nexport default Banner;\n","import { Card, Icon } from \"semantic-ui-react\";\nimport \"./dishCard.css\";\n\nconst DishCard = ({ dish }) => {\n\tconst { image, title, username, cookTime, description } = dish;\n\n\treturn (\n\t\t<Card fluid>\n\t\t\t<div\n\t\t\t\tclassName=\"dishImage\"\n\t\t\t\tstyle={{ backgroundImage: `url(${image})` }}\n\t\t\t></div>\n\t\t\t<Card.Content>\n\t\t\t\t<Card.Header>{title}</Card.Header>\n\t\t\t\t<br />\n\t\t\t\t<Card.Meta>\n\t\t\t\t\t<Icon name=\"user outline\"></Icon>\n\t\t\t\t\t<span className=\"date\">{username}</span>\n\t\t\t\t</Card.Meta>\n\t\t\t\t<br />\n\t\t\t\t<Card.Meta>\n\t\t\t\t\t<Card.Description>\n\t\t\t\t\t\t<div className=\"add-ellipsis\">\n\t\t\t\t\t\t\t<Icon name=\"list alternate outline\"></Icon> {description}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card.Description>\n\t\t\t\t</Card.Meta>\n\t\t\t</Card.Content>\n\t\t\t<Card.Content extra>\n\t\t\t\t<span>\n\t\t\t\t\t<Icon name=\"clock outline\" /> Cook time {cookTime} mins\n\t\t\t\t</span>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\nexport default DishCard;\n","import { Grid, Segment } from \"semantic-ui-react\";\nimport DishCard from \"../DishCard\";\n\nconst Carousel = ({ dishList }) => (\n\t<Segment placeholder raised>\n\t\t<Grid doubling stackable columns={4}>\n\t\t\t<Grid.Row>\n\t\t\t\t{dishList.map((dish) => (\n\t\t\t\t\t<Grid.Column key={dish.id}>\n\t\t\t\t\t\t<DishCard dish={dish}></DishCard>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t))}\n\t\t\t</Grid.Row>\n\t\t</Grid>\n\t</Segment>\n);\n\nexport default Carousel;\n","export default __webpack_public_path__ + \"static/media/spagetti.3b892b6c.jpg\";","import { gql } from \"@apollo/client\";\n\n//Get all dishes from the database\nexport const FETCH_ALL_DISHES = gql`\n\tquery allDishes {\n\t\tallDishes {\n\t\t\t_id\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//Why is this suddenly not working\nexport const FETCH_DISH_BY_ID = gql`\n\tquery dishById($id: ID!) {\n\t\tdishById(id: $id) {\n\t\t\t_id\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//Get One Master Dish\nexport const FETCH_WHOLE_DISH_BY_ID = gql`\n\tquery dishById($id: ID!) {\n\t\tdishById(id: $id) {\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t\tingredients\n\t\t\trecipe\n\t\t}\n\t}\n`;\n\n//Get all dishes by user ID (created_dishes)\nexport const FETCH_CREATED_DISHES = gql`\n\tquery userDishes($id: ID!) {\n\t\tuserDishes(id: $id) {\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\tingredients\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//five random dishes\nexport const FETCH_FOUR_RANDOM_DISHES = gql`\n\tquery fourRandomDishes {\n\t\tfourRandomDishes {\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//last five dishes\nexport const FETCH_LAST_FOUR_DISHES = gql`\n\tquery lastFiveDishes {\n\t\tlastFiveDishes {\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//Get dishes by name\nexport const FETCH_DISH_BY_NAME = gql`\n\tquery dishesByName($title: String!) {\n\t\tdishesByName(title: $title) {\n\t\t\ttitle\n\t\t\tdishAuthor\n\t\t\timage\n\t\t\tdescription\n\t\t}\n\t}\n`;\n\n//Get all users\nexport const FETCH_USERS = gql`\n\tquery users {\n\t\tusers {\n\t\t\t_id\n\t\t\tusername\n\t\t}\n\t}\n`;\n","import { Header, Icon, Segment } from \"semantic-ui-react\";\nimport Banner from \"../components/Banner\";\nimport Carousel from \"../components/Carousel\";\nimport spagettiImg from \"../assets/images/spagetti.jpg\";\nimport { FETCH_ALL_DISHES } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\n\nconst generateRandomId = () => Math.floor(Math.random() * 99);\nexport let testDishList = () => [\n\t{\n\t\tid: generateRandomId(),\n\t\timage: spagettiImg,\n\t\ttitle: `Delicious spagetti ${generateRandomId()}`,\n\t\tusername: \"Elle\",\n\t\tcookTime: generateRandomId(),\n\t\tdescription: \"Spagetti cooked in the Zimbabwe style!\",\n\t},\n\t{\n\t\tid: generateRandomId(),\n\t\timage: spagettiImg,\n\t\ttitle: `Delicious spagetti ${generateRandomId()}`,\n\t\tusername: \"Elle\",\n\t\tcookTime: generateRandomId(),\n\t\tdescription: \"Spagetti cooked in the Zimbabwe style!\",\n\t},\n\t{\n\t\tid: generateRandomId(),\n\t\timage: spagettiImg,\n\t\ttitle: `Delicious spagetti ${generateRandomId()}`,\n\t\tusername: \"Elle\",\n\t\tcookTime: generateRandomId(),\n\t\tdescription: \"Spagetti cooked in the Zimbabwe style!\",\n\t},\n\t{\n\t\tid: generateRandomId(),\n\t\timage: spagettiImg,\n\t\ttitle: `Delicious spagetti ${generateRandomId()}`,\n\t\tusername: \"Elle\",\n\t\tcookTime: generateRandomId(),\n\t\tdescription: \"Spagetti cooked in the Zimbabwe style!\",\n\t},\n];\n\nconst Home = () => {\n\tconst { loading, data } = useQuery(FETCH_ALL_DISHES);\n\tconsole.log(data);\n\ttestDishList = () => data?.allDishes || testDishList;\n\treturn (\n\t\t<>\n\t\t\t<Segment basic>\n\t\t\t\t<Banner></Banner>\n\t\t\t</Segment>\n\t\t\t<Segment basic padded=\"very\">\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Segment placeholder raised textAlign=\"center\">\n\t\t\t\t\t\t<Header textAlign=\"center\" size=\"large\">\n\t\t\t\t\t\t\t<Icon name=\"spinner\"></Icon>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t</Segment>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t\t<span className=\"cadet-color\">Recently added dishes</span>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Carousel dishList={testDishList()}></Carousel>\n\n\t\t\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t\t\t<span className=\"cadet-color\">Most popular dishes</span>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Carousel dishList={testDishList()}></Carousel>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Segment>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import { Button } from \"semantic-ui-react\";\n\nexport const buttonStyles = {\n\talgoButton: {\n\t\tbackgroundColor: \"#1a1b41\",\n\t\tcolor: \"#ffffff\",\n\t},\n};\n\nconst MainButton = ({ title }) => {\n\treturn (\n\t\t<Button type=\"submit\" size=\"large\" style={buttonStyles.algoButton}>\n\t\t\t{title}\n\t\t</Button>\n\t);\n};\nexport default MainButton;\n","import { Segment, Form, Grid, Message, Icon, Divider } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport MainButton from \"../components/MainButton\";\n\nconst Login = () => {\n  return (\n    <Segment basic>\n      <Divider horizontal></Divider>\n      <Grid columns={3} stackable>\n        <Grid.Row>\n          <Grid.Column></Grid.Column>\n          <Grid.Column>\n            <Segment raised>\n              <div>\n                <Message\n                  attached\n                  header=\"Account Login\"\n                  content=\"Enter your credentials to login into your account\"\n                />\n                <Form className=\"attached fluid segment\">\n                  <Form.Input label=\"Email\" placeholder=\"email\" type=\"email\" />\n                  <Form.Input\n                    label=\"Password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                  />\n                  <MainButton color=\"blue\" title=\"Login\"></MainButton>\n                </Form>\n                <Message attached=\"bottom\" warning>\n                  <Icon name=\"user\" />\n                  New user?&nbsp;\n                  <Link to=\"/signup\">Sign up</Link>\n                  &nbsp;instead.\n                </Message>\n              </div>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column></Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\nexport default Login;\n","import { Segment, Form, Grid, Message, Icon, Divider } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport MainButton from \"../components/MainButton\";\n\nconst Signup = () => {\n  return (\n    <Segment basic>\n      <Divider horizontal></Divider>\n      <Grid columns={3} stackable>\n        <Grid.Row>\n          <Grid.Column></Grid.Column>\n          <Grid.Column>\n            <Segment raised>\n              <div>\n                <Message\n                  attached\n                  header=\"Create Account\"\n                  content=\"Fill out the form below to create your account\"\n                />\n                <Form className=\"attached fluid segment\">\n                  <Form.Input\n                    label=\"Username\"\n                    placeholder=\"Username\"\n                    type=\"text\"\n                  />\n                  <Form.Input label=\"Email\" placeholder=\"email\" type=\"email\" />\n                  <Form.Input\n                    label=\"Password\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                  />\n                  <Form.Checkbox\n                    inline\n                    label=\"I agree to the terms and conditions\"\n                  />\n                  <MainButton color=\"blue\" title=\"Create Account\"></MainButton>\n                </Form>\n                <Message attached=\"bottom\" warning>\n                  <Icon name=\"user\" />\n                  Already signed up?&nbsp;\n                  <Link to=\"/login\">Login here</Link>\n                  &nbsp;instead.\n                </Message>\n              </div>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column></Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\nexport default Signup;\n","import { Header, Icon } from \"semantic-ui-react\";\n\nconst UserAccount = () => {\n\treturn (\n\t\t<Header as=\"h2\">\n\t\t\t<Icon name=\"user outline\"></Icon>\n\t\t\tWelcome back, Elle!\n\t\t</Header>\n\t);\n};\n\nexport default UserAccount;\n","import {\n\tSegment,\n\tHeader,\n\tGrid,\n\tButton,\n\tIcon,\n\tDivider,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { buttonStyles } from \"../../components/MainButton\";\nimport Carousel from \"../../components/Carousel\";\n// TODO: Remove me after fetching real dishes from db\nimport { testDishList } from \"../Home\";\nimport UserAccount from \"../../components/UserAccount\";\n\nconst Dashboard = () => {\n\treturn (\n\t\t<Segment basic padded=\"very\">\n\t\t\t<Segment raised padded=\"very\">\n\t\t\t\t<Grid columns={2} stackable>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<UserAccount></UserAccount>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Link to=\"create-dish\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tstyle={buttonStyles.algoButton}\n\t\t\t\t\t\t\t\t\tcircular\n\t\t\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Icon name=\"plus\"></Icon>\n\t\t\t\t\t\t\t\t\tCreate new dish\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t\t<Divider horizontal></Divider>\n\n\t\t\t\t<Divider horizontal></Divider>\n\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t<span className=\"cadet-color\">Dishes you created</span>\n\t\t\t\t</Header>\n\t\t\t\t<Carousel dishList={testDishList()}></Carousel>\n\n\t\t\t\t<Divider horizontal></Divider>\n\t\t\t\t<Header as=\"h2\">\n\t\t\t\t\t<span className=\"cadet-color\">Your favourite dishes</span>\n\t\t\t\t</Header>\n\t\t\t\t<Carousel dishList={testDishList()}></Carousel>\n\t\t\t</Segment>\n\t\t</Segment>\n\t);\n};\n\nexport default Dashboard;\n","import { Message, Form, Icon, Header } from \"semantic-ui-react\";\nimport MainButton from \"../MainButton\";\n\nconst CreateDishForm = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Message>\n\t\t\t\t<Header as=\"h3\">Create a new dish</Header>\n\t\t\t</Message>\n\t\t\t<Form className=\"attached fluid segment\">\n\t\t\t\t<Form.Input label=\"Dish Title\" placeholder=\"name of dish\" type=\"text\" />\n\t\t\t\t<Form.TextArea\n\t\t\t\t\tlabel=\"Dish Ingredients\"\n\t\t\t\t\tplaceholder=\"example: water, red peppers, oil...\"\n\t\t\t\t\trows={5}\n\t\t\t\t/>\n\t\t\t\t<Form.TextArea\n\t\t\t\t\tlabel=\"Dish Procedure\"\n\t\t\t\t\tplaceholder=\"example: step 1, heat water for 5 mins;\"\n\t\t\t\t\trows={5}\n\t\t\t\t/>\n\t\t\t\t<MainButton title=\"Submit Dish\"></MainButton>\n\t\t\t</Form>\n\t\t\t<Message attached=\"bottom\" teal>\n\t\t\t\t<Icon name=\"utensils\" />\n\t\t\t\tProperly describe the steps and ingredents need to prepare this dish.\n\t\t\t</Message>\n\t\t</div>\n\t);\n};\n\nexport default CreateDishForm;\n","import { Grid, Segment, Icon, Button } from \"semantic-ui-react\";\nimport UserAccount from \"../../components/UserAccount\";\nimport CreateDishForm from \"../../components/CreateDishForm\";\nimport { buttonStyles } from \"../../components/MainButton\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateDish = () => {\n\treturn (\n\t\t<Segment basic padded=\"very\">\n\t\t\t<Segment raised padded=\"very\">\n\t\t\t\t<Grid columns={2} stackable>\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<UserAccount></UserAccount>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column textAlign=\"right\">\n\t\t\t\t\t\t\t<Link to=\"/dashboard\">\n\t\t\t\t\t\t\t\t<Button size=\"large\" style={buttonStyles.algoButton}>\n\t\t\t\t\t\t\t\t\t<Icon name=\"arrow circle left\"></Icon> Back to dashboard\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\n\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<CreateDishForm></CreateDishForm>\n\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t<Grid.Column></Grid.Column>\n\t\t\t\t\t</Grid.Row>\n\t\t\t\t</Grid>\n\t\t\t</Segment>\n\t\t</Segment>\n\t);\n};\n\nexport default CreateDish;\n","import \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Dashboard from \"./pages/Auth/Dashboard\";\nimport CreateDish from \"./pages/Auth/CreateDish\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n\turi: \"/graphql\",\n\tcache: new InMemoryCache(),\n});\n\nconst App = () => {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<BrowserRouter>\n\t\t\t\t{/* display header */}\n\t\t\t\t<Header></Header>\n\n\t\t\t\t{/* display requested pages */}\n\t\t\t\t<main>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home></Home>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/login\">\n\t\t\t\t\t\t<Login></Login>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/signup\">\n\t\t\t\t\t\t<Signup></Signup>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/dashboard\">\n\t\t\t\t\t\t<Dashboard></Dashboard>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/create-dish\">\n\t\t\t\t\t\t<CreateDish></CreateDish>\n\t\t\t\t\t</Route>\n\t\t\t\t</main>\n\n\t\t\t\t{/* display footer */}\n\t\t\t\t<Footer></Footer>\n\t\t\t</BrowserRouter>\n\t\t</ApolloProvider>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}